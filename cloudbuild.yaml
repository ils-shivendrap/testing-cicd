steps:
# Build the container image
# update the gcr.io/[project-id]/[build-image-name]
- id: publish to pubsub
  name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      # Get the Git author's email address
      git_author_email=$(git show  -s --format='%ae' $COMMIT_SHA)
      echo "author Email: $git_author_email"
      echo "________________________________________"

      
      git_author_name=$(git show -s  --format='%an' $COMMIT_SHA)
      echo "authon Name n: $git_author_name"
      git_author_name1=$(git show -s  --format='%an' $COMMIT_SHA)
      echo "authon Name N: $git_author_name1"
      echo "________________________________________"
      
      # Get the commit body
      body=$(git show -s --format='%b' $COMMIT_SHA)
      echo "Body: $body"
      echo "________________________________________"
      
      # Get the commit subject (commit note)
      commit_note=$(git show  --format='%s' $COMMIT_SHA)
      echo "commit_note: $commit_note"
      echo "________________________________________"


      # echo "commit: $COMMIT_SHA"
      # echo " Repo Name: $REPO_NAME"
      # echo "Repo Full Name: $REPO_FULL_NAME"
      # echo "Branch Name: $BRANCH_NAME"
      echo " ---"
      echo "________________________________________"
      


      

















# steps:
# # Build the container image
# # update the gcr.io/[project-id]/[build-image-name]
# - id: Docker build
#   name: 'gcr.io/cloud-builders/docker'
#   args: ['build', '-t', '${_REPO_REGION}/${_PROJECT_ID}/${_REPO_NAME}/${_SERVICE_NAME}', '.']

# # Push the container image to Artifact Registry
# - id: Container image push
#   name: 'gcr.io/cloud-builders/docker'
#   args: ['push', '${_REPO_REGION}/${_PROJECT_ID}/${_REPO_NAME}/${_SERVICE_NAME}']

# - id: Cloud run deploy
#   name: google/cloud-sdk
#   args:
#   - gcloud
#   - run
#   - deploy
#   - ${_SERVICE_NAME}
#   - --image=${_REPO_REGION}/${_PROJECT_ID}/${_REPO_NAME}/${_SERVICE_NAME}
#   - --region=${_REGION}
#   - --platform=managed
#   - --service-account=${_SERVICE_ACCOUNT}
#   - --max-instances=5
#   - --memory=512Mi
#   # - --vpc-connector=projects/${_HOST_PROJECT_ID}/locations/${_REGION}/connectors/${_VPC_CONNECTOR}
#   # - --ingress=all
#   #- --ingress=internal-and-cloud-load-balancing
#   # - --vpc-egress=all-traffic
#   - --allow-unauthenticated
#   - --port=80
# timeout: 3660s

# images:
# - ${_REPO_REGION}/${_PROJECT_ID}/${_REPO_NAME}/${_SERVICE_NAME}

# options:
#   logging: CLOUD_LOGGING_ONLY
  
# substitutions:
#   _REPO_REGION: us-docker.pkg.dev
#   _REPO_NAME: shiv-testing
#   _SERVICE_NAME: testing
#   _REGION: us-central1
#   _SERVICE_ACCOUNT: shiv-testing-account@sureel-test.iam.gserviceaccount.com
#   _PROJECT_ID: sureel-test
  
